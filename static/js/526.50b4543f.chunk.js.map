{"version":3,"file":"static/js/526.50b4543f.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/FormPhoneBook/FormPhoneBook.styled.js","components/FormPhoneBook/FormPhoneBook.js","routes/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItemLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactItemBtn = styled.button`\n  font-weight: 700;\n  padding: 8px;\n  height: 34px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 2, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 2, 0.14), 0px 2px 1px -1px rgba(0, 0, 2, 0.12);\n  background-color: white;\n  border-radius: 15px;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n\n    &:hover {\n        background-color: blue: \n    }\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { ContactItemLi, ContactItemBtn } from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItemLi>\n      <p>\n        {name}: <span>{number}</span>\n      </p>\n\n      <ContactItemBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </ContactItemBtn>\n    </ContactItemLi>\n  );\n};\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  padding: 15px;\n  margin-top: 0;\n  list-style: none;\n`;\n","import ContactItem from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { selectContact } from 'redux/selectors';\nimport { ContactsListStyled } from './ContactList.styled';\n\nconst ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContact);\n\n  const filtredContacts = () => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase();\n      if (contacts.length !== 0) {\n        return contacts.filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        );\n      }\n    }\n    return contacts;\n  };\n  const contactsFiltred = filtredContacts();\n\n  return (\n    <ContactsListStyled>\n      {contactsFiltred &&\n        contactsFiltred.map(({ id, name, number }) => {\n          return <ContactItem id={id} key={id} name={name} number={number} />;\n        })}\n    </ContactsListStyled>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const LabelFilterStyle = styled.label`\n  position: relative;\n  display: block;\n  margin-bottom: 10px;\n  height: 24px;\n  text-align: start;\n`;\n\nexport const InputFilterStyled = styled.input`\n  position: absolute;\n  left: 165px;\n  border: 1px solid transparent;\n  outline-color: plum;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { nanoid } from 'nanoid';\nimport { LabelFilterStyle, InputFilterStyled } from './Filter.styled';\n\nconst searchId = nanoid();\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <LabelFilterStyle htmlFor={searchId}>\n        Find contacts by name\n        <InputFilterStyled\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={evt => dispatch(setFilter(evt.target.value))}\n          id={searchId}\n        />\n      </LabelFilterStyle>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  position: relative;\n  padding: 15px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const LabelStyle = styled.label`\n  display: block;\n  text-align: start;\n  margin-bottom: 10px;\n  height: 24px;\n`;\n\nexport const InputStyle = styled.input`\n  position: absolute;\n  width: 240px;\n  left: 80px;\n  border: none;\n  outline-color: plum;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), 0 2px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const BtnStyle = styled.button`\n  font-weight: 700;\n  padding: 8px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 2, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 2, 0.14), 0px 2px 1px -1px rgba(0, 0, 2, 0.12);\n  background-color: white;\n  border-radius: 15px;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: pink;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContact } from 'redux/selectors';\nimport { Notify } from 'notiflix';\nimport { nanoid } from 'nanoid';\nimport {\n  FormStyle,\n  LabelStyle,\n  InputStyle,\n  BtnStyle,\n} from './FormPhoneBook.styled';\n\nconst FormPhoneBook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const NameInputFormId = nanoid();\n  const NumberInputFormId = nanoid();\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(\"There isn't such option\");\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      Notify.failure(`${name} is already in contacts.`);\n      return;\n    } else if (contacts.find(contact => contact.number === number)) {\n      Notify.failure(`${number} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyle onSubmit={handleSubmit}>\n      <LabelStyle htmlFor={NameInputFormId}>\n        Name\n        <InputStyle\n          id={NameInputFormId}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </LabelStyle>\n      <LabelStyle htmlFor={NumberInputFormId}>\n        Number\n        <InputStyle\n          id={NumberInputFormId}\n          type=\"tel\"\n          placeholder=\"Enter number\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </LabelStyle>\n\n      <BtnStyle type=\"submit\">Add contact</BtnStyle>\n    </FormStyle>\n  );\n};\n\nexport default FormPhoneBook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectIsLoading } from 'redux/selectors';\nimport { selectError } from 'redux/selectors';\nimport { selectContact } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport ContactList from '../../components/ContactsList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport FormPhoneBook from '../../components/FormPhoneBook/FormPhoneBook';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Your contacts</h1>\n      <div>\n        <FormPhoneBook />\n      </div>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 && <ContactList />}\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["ContactItemLi","styled","ContactItemBtn","id","name","number","dispatch","useDispatch","type","onClick","deleteContact","ContactsListStyled","filter","useSelector","selectFilter","contacts","selectContact","contactsFiltred","normalizedFilter","toLowerCase","length","contact","includes","filtredContacts","map","LabelFilterStyle","InputFilterStyled","searchId","nanoid","htmlFor","value","onChange","evt","setFilter","target","FormStyle","LabelStyle","InputStyle","BtnStyle","useState","setName","setNumber","NameInputFormId","NumberInputFormId","handleChange","Error","onSubmit","preventDefault","find","Notify","addContact","placeholder","pattern","required","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts"],"sourceRoot":""}